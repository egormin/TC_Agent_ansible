- name: ===================== Install Java =====================
  yum:    
    name: java
    state: latest
  become: yes

- name: ===================== Install libselinux-python =====================
  yum:
    name: "{{item.package}}"
    state: latest
  with_items: 
    - { package: 'libselinux-python' }
    - { package: 'unzip' }
  become: yes

- name: ===================== Check if directory '{{buildAgent_path}}' exists =====================
  file:
    path: '{{buildAgent_path}}'
    state: directory
    mode: 0755
  become: yes

- name: ===================== Download build agent =====================
  unarchive:
    src: "{{TeamCity_url}}/update/buildAgent.zip"
    dest: '{{buildAgent_path}}'
    remote_src: yes
    keep_newer: yes
  become: yes
  
- name: ===================== Check if buildAgent config already exists =====================
  stat:
    path: "{{buildAgent_path}}conf/buildAgent.properties"
  register: buildAgentConfig

- name: ---------- GET agent token ----------
  shell: cat {{buildAgent_path}}conf/buildAgent.properties | grep authorizationToken= | cut -d "=" -f2
  register: agentToken
  when: buildAgentConfig.stat.exists == True
  
- name: ==================== buildAgent config copying =================
  template:
    src: buildagent_properties.j2
    dest: "/tmp/buildAgent.properties"
  become: yes

- name: ==================== Agent token Changing to existing =================
  shell: sed -i -e 's/__myToken__/{{agentToken.stdout}}/g' /tmp/buildAgent.properties
  when: buildAgentConfig.stat.exists == True
  become: yes
  
- name: ==================== Agent token Changing to empty =================
  shell: sed -i -e 's/__myToken__//g' /tmp/buildAgent.properties
  when: buildAgentConfig.stat.exists == False
  
- copy:
  src: /tmp/buildAgent.properties
  dest: "{{buildAgent_path}}conf/buildAgent.properties"

- name: ==================== TC agent init script copying =================
  template:
    src: buildAgent.j2
    dest: "/etc/init.d/{{TCAgentService_name}}"
    mode: 0755
  become: yes
  
- name: ==================== XXX =================
  template:
    src: test.j2
    dest: "/opt/XX.test"
    mode: 0755
  become: yes 
  
- name: 
  debug: msg="Java version is {{ agentToken.stdout }}"

- name: ==================== TC agent start =================
  service:
    name: teamcity-agent
    pattern: /etc/init.d
    state: started
    enabled: True
  become: yes

- name: ==================== Wait until agent starts up =================
  wait_for: timeout=120
  delegate_to: localhost

- name: ==================== Register Agents ================
  agent_authorize:
    hosts: all
    tc_url: '{{TeamCity_url}}'
    tc_user: '{{ tc_user }}'
    tc_password: '{{ tc_password }}'
